repositoryModernizer:
    # groupId to be used for newly created packages
    groupId:
    # information about parent pom
    parentPom:
        # absolute path to the parent pom file
        path:
        # the artifactId to be set for the parent pom
        artifactId:
        # the application title to be set for the parent pom
        appTitle:
        # version to be to be set for the parent pom
        version:
    # information required for all and analyse packages
    all:
        # prefix that is to be used to set the artifactId for all and analyse packages
        artifactId:
        # application title
        appTitle:
        # version to be set for all pom
        version:
    # information about projects (expects an array of project information)
    # NOTE : For multiple projects create separate copies of the info section for each project
    projects:
        - # absolute path to the project folder
          projectPath:
          # Array of relative path(s) (w.r.t. the project folder) to the existing content package(s) that needs to be restructured.
          # NOTE : only content packages are expected here, NOT bundle/jar artifacts
          existingContentPackageFolder:
              -
          # relative path (w.r.t. the existing content package folder) to the filter.xml file
          # (If not specified, default path `/src/main/content/META-INF/vault/filter.xml` will be used.)
          relativePathToExistingFilterXml:
          # relative path (w.r.t. the existing content package folder) to the jcr_root directory
          # (If not specified, default path `/src/main/content/jcr_root` will be used)
          relativePathToExistingJcrRoot:
          # prefix that is to be used to set the artifactId for newly created packages
          artifactId:
          # application title
          appTitle:
          # application ID (will be used for config and package folder names)
          appId:
          # project specific version to be used for content packages
          version:
          # Array of relative path(s) (w.r.t. the project folder) to the existing code bundles (will be embedded in the all package).
          coreBundles:
              -
          # OSGi config folders that need to be renamed.
          # The existing/source OSGi config folder PATH (JCR path stating from '/apps') is expected as key
          # and the replacement OSGi folder NAME is expected as value. See examples below :
          #    /apps/my-appId/config.prod : config.publish.prod
          #    /apps/system/config.author.dev1 : config.author.dev
          #    /apps/system/config.author.dev2 : config.author.dev
          # NOTE :
          #    1. All OSGi config folders under the same path and with same replacement name will be MERGED
          #       (as configured in above example).
          #    2. If there exists OSGi config files with the same pid/filename in more than one config folders
          #       which are to be merged, they will not be overwritten. A warning regrading the same will be
          #       generated in the summary report and result log file. User would need to manually evaluate
          #       which config to persist
          osgiFoldersToRename:
          subProjects:
            - # absolute path to the project folder
                projectPath:
                # Array of relative path(s) (w.r.t. the project folder) to the existing content package(s) that needs to be restructured.
                # NOTE : only content packages are expected here, NOT bundle/jar artifacts
                existingContentPackageFolder:
                    -
                # relative path (w.r.t. the existing content package folder) to the filter.xml file
                # (If not specified, default path `/src/main/content/META-INF/vault/filter.xml` will be used.)
                relativePathToExistingFilterXml:
                # relative path (w.r.t. the existing content package folder) to the jcr_root directory
                # (If not specified, default path `/src/main/content/jcr_root` will be used)
                relativePathToExistingJcrRoot:
                # prefix that is to be used to set the artifactId for newly created packages
                artifactId:
                # application title
                appTitle:
                # application ID (will be used for config and package folder names)
                appId:
                # project specific version to be used for content packages
                version:
                # Array of relative path(s) (w.r.t. the project folder) to the existing code bundles (will be embedded in the all package).
                coreBundles:
                    -
                # OSGi config folders that need to be renamed.
                # The existing/source OSGi config folder PATH (JCR path stating from '/apps') is expected as key
                # and the replacement OSGi folder NAME is expected as value. See examples below :
                #    /apps/my-appId/config.prod : config.publish.prod
                #    /apps/system/config.author.dev1 : config.author.dev
                #    /apps/system/config.author.dev2 : config.author.dev
                # NOTE :
                #    1. All OSGi config folders under the same path and with same replacement name will be MERGED
                #       (as configured in above example).
                #    2. If there exists OSGi config files with the same pid/filename in more than one config folders
                #       which are to be merged, they will not be overwritten. A warning regrading the same will be
                #       generated in the summary report and result log file. User would need to manually evaluate
                #       which config to persist
                osgiFoldersToRename:
            
